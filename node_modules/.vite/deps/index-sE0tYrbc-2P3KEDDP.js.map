{
  "version": 3,
  "sources": ["../../@milkdown/plugin-block/src/__internal__/with-meta.ts", "../../@milkdown/plugin-block/src/block-config.ts", "../../@milkdown/plugin-block/src/__internal__/select-node-by-dom.ts", "../../@milkdown/plugin-block/src/__internal__/serialize-for-clipboard.ts", "../../@milkdown/plugin-block/src/block-service.ts", "../../@milkdown/plugin-block/src/block-plugin.ts", "../../@milkdown/plugin-block/src/block-provider.ts", "../../@milkdown/plugin-block/src/index.ts", "../../@milkdown/plugin-slash/src/slash-plugin.ts", "../../@milkdown/plugin-slash/src/slash-provider.ts", "../../@milkdown/crepe/src/feature/block-edit/menu/utils.ts", "../../@milkdown/crepe/src/feature/block-edit/menu/group-builder.ts", "../../@milkdown/crepe/src/feature/block-edit/menu/config.ts", "../../@milkdown/crepe/src/feature/block-edit/menu/component.ts", "../../@milkdown/crepe/src/feature/block-edit/menu/index.ts", "../../@milkdown/crepe/src/feature/block-edit/handle/component.ts", "../../@milkdown/crepe/src/feature/block-edit/handle/index.ts", "../../@milkdown/crepe/src/feature/block-edit/index.ts"],
  "sourcesContent": ["import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(plugin: T, meta: Partial<Meta> & Pick<Meta, 'displayName'>): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/plugin-block',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n", "import type { Node, ResolvedPos } from '@milkdown/prose/model'\nimport { $ctx } from '@milkdown/utils'\n\nimport { findParent } from '@milkdown/prose'\nimport { withMeta } from './__internal__/with-meta'\n\n/// @internal\nexport type FilterNodes = (pos: ResolvedPos, node: Node) => boolean\n\n/// @internal\nexport const defaultNodeFilter: FilterNodes = (pos) => {\n  const table = findParent(node => node.type.name === 'table')(pos)\n  if (table)\n    return false\n\n  return true\n}\n\n/// A slice contains the block config.\n/// Possible properties:\n/// - `filterNodes`: A function to filter nodes that can be dragged.\nexport const blockConfig = $ctx<{ filterNodes: FilterNodes }, 'blockConfig'>({ filterNodes: defaultNodeFilter }, 'blockConfig')\n\nwithMeta(blockConfig, {\n  displayName: 'Ctx<blockConfig>',\n})\n", "import type { EditorView } from '@milkdown/prose/view'\n\nimport type { FilterNodes } from '../block-config'\nimport type { ActiveNode } from '../types'\n\nexport function selectRootNodeByDom(view: EditorView, coords: { x: number, y: number }, filterNodes: FilterNodes): ActiveNode | null {\n  const root = view.dom.parentElement\n  if (!root)\n    return null\n\n  try {\n    const pos = view.posAtCoords({\n      left: coords.x,\n      top: coords.y,\n    })?.inside\n    if (pos == null || pos < 0)\n      return null\n\n    let $pos = view.state.doc.resolve(pos)\n    let node = view.state.doc.nodeAt(pos)\n    let element = view.nodeDOM(pos) as HTMLElement | null\n\n    const filter = (needLookup: boolean) => {\n      const checkDepth = $pos.depth >= 1 && $pos.index($pos.depth) === 0\n      const shouldLookUp = needLookup || checkDepth\n\n      if (!shouldLookUp)\n        return\n\n      const ancestorPos = $pos.before($pos.depth)\n      node = view.state.doc.nodeAt(ancestorPos)\n      element = view.nodeDOM(ancestorPos) as HTMLElement | null\n      $pos = view.state.doc.resolve(ancestorPos)\n\n      if (!filterNodes($pos, node!))\n        filter(true)\n    }\n\n    // If filterNodes returns false, we should look up the parent node.\n    const filterResult = filterNodes($pos, node!)\n    filter(!filterResult)\n\n    if (!element || !node)\n      return null\n\n    return { node, $pos, el: element }\n  }\n  catch {\n    return null\n  }\n}\n", "/**\n * Copy pasted from https://github.com/ProseMirror/prosemirror-view/blob/master/src/clipboard.ts\n */\n\nimport type { NodeType, Slice } from '@milkdown/prose/model'\nimport { DOMSerializer } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\n\nlet _detachedDoc: Document | null = null\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument('title'))\n}\n\nconst wrapMap: { [node: string]: string[] } = {\n  thead: ['table'],\n  tbody: ['table'],\n  tfoot: ['table'],\n  caption: ['table'],\n  colgroup: ['table'],\n  col: ['table', 'colgroup'],\n  tr: ['table', 'tbody'],\n  td: ['table', 'tbody', 'tr'],\n  th: ['table', 'tbody', 'tr'],\n}\n\nexport function serializeForClipboard(view: EditorView, slice: Slice) {\n  const context = []\n  let { openStart, openEnd, content } = slice\n  while (openStart > 1 && openEnd > 1 && content.childCount === 1 && content.firstChild!.childCount === 1) {\n    openStart -= 1\n    openEnd -= 1\n    const node = content.firstChild!\n    context.push(\n      node.type.name,\n      node.attrs !== (node.type as NodeType & { defaultAttrs: unknown }).defaultAttrs ? node.attrs : null,\n    )\n    content = node.content\n  }\n\n  const serializer = view.someProp('clipboardSerializer') || DOMSerializer.fromSchema(view.state.schema)\n  const doc = detachedDoc()\n  const wrap = doc.createElement('div')\n  wrap.appendChild(serializer.serializeFragment(content, { document: doc }))\n\n  let firstChild = wrap.firstChild\n  let needsWrap\n  let wrappers = 0\n  // eslint-disable-next-line no-cond-assign\n  while (firstChild && firstChild.nodeType === 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      const wrapper = doc.createElement(needsWrap[i] as string)\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n      wrappers++\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType === 1) {\n    (firstChild as HTMLElement).setAttribute(\n      'data-pm-slice',\n            `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : ''} ${JSON.stringify(context)}`,\n    )\n  }\n\n  const text\n        = view.someProp('clipboardTextSerializer', f => f(slice, view))\n        || slice.content.textBetween(0, slice.content.size, '\\n\\n')\n\n  return { dom: wrap, text }\n}\n", "import type { Ctx } from '@milkdown/ctx'\nimport { editorViewCtx } from '@milkdown/core'\nimport { browser } from '@milkdown/prose'\nimport type { Selection } from '@milkdown/prose/state'\nimport { NodeSelection } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport throttle from 'lodash.throttle'\n\nimport type { FilterNodes } from './block-config'\nimport { blockConfig } from './block-config'\nimport { selectRootNodeByDom } from './__internal__/select-node-by-dom'\nimport { serializeForClipboard } from './__internal__/serialize-for-clipboard'\nimport type { ActiveNode } from './types'\n\nconst brokenClipboardAPI\n    = (browser.ie && <number>browser.ie_version < 15) || (browser.ios && browser.webkit_version < 604)\n\nconst buffer = 20\n\n/// @internal\nexport type BlockServiceMessageType = {\n  type: 'hide'\n} | {\n  type: 'show'\n  active: ActiveNode\n}\n\n/// @internal\nexport type BlockServiceMessage = (message: BlockServiceMessageType) => void\n\n/// @internal\n/// The block service, provide events and methods for block plugin.\n/// Generally you don't need to use this class directly.\nexport class BlockService {\n  /// @internal\n  #ctx?: Ctx\n\n  /// @internal\n  #createSelection: () => null | Selection = () => {\n    if (!this.#active)\n      return null\n    const result = this.#active\n    const view = this.#view\n\n    if (view && NodeSelection.isSelectable(result.node)) {\n      const nodeSelection = NodeSelection.create(view.state.doc, result.$pos.pos)\n      view.dispatch(view.state.tr.setSelection(nodeSelection))\n      view.focus()\n      this.#activeSelection = nodeSelection\n      return nodeSelection\n    }\n    return null\n  }\n\n  /// @internal\n  #activeSelection: null | Selection = null\n  /// @internal\n  #active: null | ActiveNode = null\n  /// @internal\n  #activeDOMRect: undefined | DOMRect = undefined\n\n  /// @internal\n  #dragging = false\n\n  /// @internal\n  get #filterNodes(): FilterNodes | undefined {\n    return this.#ctx?.get(blockConfig.key).filterNodes\n  }\n\n  /// @internal\n  get #view() {\n    return this.#ctx?.get(editorViewCtx)\n  }\n\n  /// @internal\n  #notify?: BlockServiceMessage\n\n  /// @internal\n  #hide = () => {\n    this.#notify?.({ type: 'hide' })\n    this.#active = null\n  }\n\n  /// @internal\n  #show = (active: ActiveNode) => {\n    this.#active = active\n    this.#notify?.({ type: 'show', active })\n  }\n\n  /// Bind editor context and notify function to the service.\n  bind = (ctx: Ctx, notify: BlockServiceMessage) => {\n    this.#ctx = ctx\n    this.#notify = notify\n  }\n\n  /// Add mouse event to the dom.\n  addEvent = (dom: HTMLElement) => {\n    dom.addEventListener('mousedown', this.#handleMouseDown)\n    dom.addEventListener('mouseup', this.#handleMouseUp)\n    dom.addEventListener('dragstart', this.#handleDragStart)\n  }\n\n  /// Remove mouse event to the dom.\n  removeEvent = (dom: HTMLElement) => {\n    dom.removeEventListener('mousedown', this.#handleMouseDown)\n    dom.removeEventListener('mouseup', this.#handleMouseUp)\n    dom.removeEventListener('dragstart', this.#handleDragStart)\n  }\n\n  /// Unbind the notify function.\n  unBind = () => {\n    this.#notify = undefined\n  }\n\n  /// @internal\n  #handleMouseDown = () => {\n    this.#activeDOMRect = this.#active?.el.getBoundingClientRect()\n    this.#createSelection()\n  }\n\n  /// @internal\n  #handleMouseUp = () => {\n    if (!this.#dragging) {\n      requestAnimationFrame(() => {\n        if (!this.#activeDOMRect)\n          return\n        this.#view?.focus()\n      })\n\n      return\n    }\n    this.#dragging = false\n    this.#activeSelection = null\n  }\n\n  /// @internal\n  #handleDragStart = (event: DragEvent) => {\n    this.#dragging = true\n\n    const view = this.#view\n    if (!view)\n      return\n    view.dom.dataset.dragging = 'true'\n\n    const selection = this.#activeSelection\n    if (event.dataTransfer && selection) {\n      const slice = selection.content()\n      event.dataTransfer.effectAllowed = 'copyMove'\n      const { dom, text } = serializeForClipboard(view, slice)\n      event.dataTransfer.clearData()\n      event.dataTransfer.setData(brokenClipboardAPI ? 'Text' : 'text/html', dom.innerHTML)\n      if (!brokenClipboardAPI)\n        event.dataTransfer.setData('text/plain', text)\n      const activeEl = this.#active?.el\n      if (activeEl)\n        event.dataTransfer.setDragImage(activeEl, 0, 0)\n\n      view.dragging = {\n        slice,\n        move: true,\n      }\n    }\n  }\n\n  /// @internal\n  keydownCallback = (view: EditorView) => {\n    this.#hide()\n\n    this.#dragging = false\n    view.dom.dataset.dragging = 'false'\n    return false\n  }\n\n  /// @internal\n  #mousemoveCallback = throttle((view: EditorView, event: MouseEvent) => {\n    if (!view.editable)\n      return\n\n    const rect = view.dom.getBoundingClientRect()\n    const x = rect.left + rect.width / 2\n    const dom = view.root.elementFromPoint(x, event.clientY)\n    if (!(dom instanceof Element)) {\n      this.#hide()\n      return\n    }\n\n    const filterNodes = this.#filterNodes\n    if (!filterNodes)\n      return\n\n    const result = selectRootNodeByDom(view, { x, y: event.clientY }, filterNodes)\n\n    if (!result) {\n      this.#hide()\n      return\n    }\n    this.#show(result)\n  }, 200)\n\n  /// @internal\n  mousemoveCallback = (view: EditorView, event: MouseEvent) => {\n    if (view.composing || !view.editable)\n      return false\n\n    this.#mousemoveCallback(view, event)\n\n    return false\n  }\n\n  /// @internal\n  dragoverCallback = (view: EditorView, event: DragEvent) => {\n    if (this.#dragging) {\n      const root = this.#view?.dom.parentElement\n      if (!root)\n        return false\n\n      const hasHorizontalScrollbar = root.scrollHeight > root.clientHeight\n\n      const rootRect = root.getBoundingClientRect()\n      if (hasHorizontalScrollbar) {\n        if (root.scrollTop > 0 && Math.abs(event.y - rootRect.y) < buffer) {\n          const top = root.scrollTop > 10 ? root.scrollTop - 10 : 0\n          root.scrollTop = top\n          return false\n        }\n        const totalHeight = Math.round(view.dom.getBoundingClientRect().height)\n        const scrollBottom = Math.round(root.scrollTop + rootRect.height)\n        if (scrollBottom < totalHeight && Math.abs(event.y - (rootRect.height + rootRect.y)) < buffer) {\n          const top = root.scrollTop + 10\n          root.scrollTop = top\n          return false\n        }\n      }\n    }\n    return false\n  }\n\n  /// @internal\n  dragenterCallback = (view: EditorView) => {\n    if (!view.dragging)\n      return\n\n    this.#dragging = true\n    view.dom.dataset.dragging = 'true'\n  }\n\n  /// @internal\n  dragleaveCallback = (view: EditorView, event: DragEvent) => {\n    const x = event.clientX\n    const y = event.clientY\n    // if cursor out of the editor\n    if (x < 0 || y < 0 || x > window.innerWidth || y > window.innerHeight) {\n      this.#active = null\n      this.#dragEnd(view)\n    }\n  }\n\n  /// @internal\n  dropCallback = (view: EditorView) => {\n    this.#dragEnd(view)\n\n    return false\n  }\n\n  /// @internal\n  dragendCallback = (view: EditorView) => {\n    this.#dragEnd(view)\n  }\n\n  /// @internal\n  #dragEnd = (view: EditorView) => {\n    this.#dragging = false\n    view.dom.dataset.dragging = 'false'\n  }\n}\n", "import type { PluginSpec } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport { $ctx, $prose } from '@milkdown/utils'\n\nimport { BlockService } from './block-service'\nimport { withMeta } from './__internal__/with-meta'\nimport { blockConfig } from './block-config'\n\n/// @internal\nexport const blockService = $ctx(new BlockService(), 'blockService')\n\nwithMeta(blockConfig, {\n  displayName: 'Ctx<blockService>',\n})\n\n/// A slice contains a factory that will return a plugin spec.\n/// Users can use this slice to customize the plugin.\nexport const blockSpec = $ctx<PluginSpec<any>, 'blockSpec'>({}, 'blockSpec')\n\nwithMeta(blockConfig, {\n  displayName: 'Ctx<blockSpec>',\n})\n\n/// The block prosemirror plugin.\nexport const blockPlugin = $prose((ctx) => {\n  const milkdownPluginBlockKey = new PluginKey('MILKDOWN_BLOCK')\n  const service = ctx.get(blockService.key)\n  const spec = ctx.get(blockSpec.key)\n\n  return new Plugin({\n    key: milkdownPluginBlockKey,\n    ...spec,\n    props: {\n      ...spec.props,\n      handleDOMEvents: {\n        drop: (view) => {\n          return service.dropCallback(view)\n        },\n        pointermove: (view, event) => {\n          return service.mousemoveCallback(view, event)\n        },\n        keydown: (view) => {\n          return service.keydownCallback(view)\n        },\n        dragover: (view, event) => {\n          return service.dragoverCallback(view, event)\n        },\n        dragleave: (view, event) => {\n          return service.dragleaveCallback(view, event)\n        },\n        dragenter: (view) => {\n          return service.dragenterCallback(view)\n        },\n        dragend: (view) => {\n          return service.dragendCallback(view)\n        },\n      },\n    },\n  })\n})\n\nwithMeta(blockPlugin, {\n  displayName: 'Prose<block>',\n})\n", "import type { Ctx } from '@milkdown/ctx'\nimport type { EditorState } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport type { Placement, VirtualElement } from '@floating-ui/dom'\nimport { computePosition, flip, offset } from '@floating-ui/dom'\n\nimport { editorViewCtx } from '@milkdown/core'\nimport type { BlockService } from './block-service'\nimport { blockService } from './block-plugin'\nimport type { ActiveNode } from './types'\n\n/// The context of the block provider.\nexport interface DeriveContext {\n  ctx: Ctx\n  active: ActiveNode\n  editorDom: HTMLElement\n  blockDom: HTMLElement\n}\n\n/// Options for creating block provider.\nexport interface BlockProviderOptions {\n  /// The context of the editor.\n  ctx: Ctx\n  /// The content of the block.\n  content: HTMLElement\n  /// The function to determine whether the tooltip should be shown.\n  shouldShow?: (view: EditorView, prevState?: EditorState) => boolean\n  /// The offset to get the block. Default is 0.\n  getOffset?: (deriveContext: DeriveContext) => number | {\n    mainAxis?: number\n    crossAxis?: number\n    alignmentAxis?: number | null\n  }\n  /// The function to get the position of the block. Default is the position of the active node.\n  getPosition?: (deriveContext: DeriveContext) => Omit<DOMRect, 'toJSON'>\n  /// The function to get the placement of the block. Default is 'left'.\n  getPlacement?: (deriveContext: DeriveContext) => Placement\n}\n\n/// A provider for creating block.\nexport class BlockProvider {\n  /// @internal\n  readonly #element: HTMLElement\n\n  /// @internal\n  readonly #ctx: Ctx\n\n  /// @internal\n  #service?: BlockService\n\n  /// @internal\n  #activeNode: ActiveNode | null = null\n\n  /// @internal\n  #initialized = false\n\n  /// @internal\n  readonly #getOffset?: (deriveContext: DeriveContext) => number | {\n    mainAxis?: number\n    crossAxis?: number\n    alignmentAxis?: number | null\n  }\n\n  /// @internal\n  readonly #getPosition?: (deriveContext: DeriveContext) => Omit<DOMRect, 'toJSON'>\n\n  /// @internal\n  readonly #getPlacement?: (deriveContext: DeriveContext) => Placement\n\n  /// The context of current active node.\n  get active() {\n    return this.#activeNode\n  }\n\n  constructor(options: BlockProviderOptions) {\n    this.#ctx = options.ctx\n    this.#element = options.content\n    this.#getOffset = options.getOffset\n    this.#getPosition = options.getPosition\n    this.#getPlacement = options.getPlacement\n    this.hide()\n  }\n\n  /// @internal\n  #init() {\n    const view = this.#ctx.get(editorViewCtx)\n    view.dom.parentElement?.appendChild(this.#element)\n\n    const service = this.#ctx.get(blockService.key)\n    service.bind(this.#ctx, (message) => {\n      if (message.type === 'hide') {\n        this.hide()\n        this.#activeNode = null\n      }\n\n      else if (message.type === 'show') {\n        this.show(message.active)\n        this.#activeNode = message.active\n      }\n    })\n\n    this.#service = service\n    this.#service.addEvent(this.#element)\n    this.#element.draggable = true\n  }\n\n  /// Update provider state by editor view.\n  update = (): void => {\n    requestAnimationFrame(() => {\n      if (!this.#initialized) {\n        try {\n          this.#init()\n          this.#initialized = true\n        }\n        catch {\n          // ignore\n        }\n      }\n    })\n  }\n\n  /// Destroy the block.\n  destroy = () => {\n    this.#service?.unBind()\n    this.#service?.removeEvent(this.#element)\n    this.#element.remove()\n  }\n\n  /// Show the block.\n  show = (active: ActiveNode) => {\n    const dom = active.el\n    const editorDom = this.#ctx.get(editorViewCtx).dom\n    const deriveContext: DeriveContext = {\n      ctx: this.#ctx,\n      active,\n      editorDom,\n      blockDom: this.#element,\n    }\n    const virtualEl: VirtualElement = {\n      contextElement: dom,\n      getBoundingClientRect: () => {\n        if (this.#getPosition)\n          return this.#getPosition(deriveContext)\n\n        return dom.getBoundingClientRect()\n      },\n    }\n    const middleware = [flip()]\n    if (this.#getOffset) {\n      const offsetOption = this.#getOffset(deriveContext)\n      const offsetExt = offset(offsetOption)\n      middleware.push(offsetExt)\n    }\n\n    computePosition(virtualEl, this.#element, {\n      placement: this.#getPlacement\n        ? this.#getPlacement(deriveContext)\n        : 'left',\n      middleware,\n    }).then(({ x, y }) => {\n      Object.assign(this.#element.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n      this.#element.dataset.show = 'true'\n    })\n  }\n\n  /// Hide the block.\n  hide = () => {\n    this.#element.dataset.show = 'false'\n  }\n}\n", "import type { SliceType } from '@milkdown/ctx'\nimport type { PluginSpec } from '@milkdown/prose/state'\nimport type { $Ctx, $Prose } from '@milkdown/utils'\nimport type { FilterNodes } from './block-config'\nimport { blockConfig } from './block-config'\nimport { blockPlugin, blockService, blockSpec } from './block-plugin'\nimport type { BlockService } from './block-service'\n\nexport * from './block-plugin'\nexport * from './block-provider'\nexport * from './block-service'\nexport * from './block-config'\nexport * from './types'\n\n/// @internal\nexport type BlockPlugin = [\n  $Ctx<PluginSpec<any>, 'blockSpec'>,\n  $Ctx<{ filterNodes: FilterNodes }, 'blockConfig'>,\n  $Ctx<BlockService, 'blockService'>,\n  $Prose,\n] & {\n  key: SliceType<PluginSpec<any>, 'blockSpec'>\n  pluginKey: $Prose['key']\n}\n\n/// All plugins exported by this package.\nexport const block = [blockSpec, blockConfig, blockService, blockPlugin] as BlockPlugin\nblock.key = blockSpec.key\nblock.pluginKey = blockPlugin.key\n", "import type { SliceType } from '@milkdown/ctx'\nimport type { PluginSpec } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport type { $Ctx, $Prose } from '@milkdown/utils'\nimport { $ctx, $prose } from '@milkdown/utils'\n\n/// @internal\nexport type SlashPluginSpecId<Id extends string> = `${Id}_SLASH_SPEC`\n\n/// @internal\nexport type SlashPlugin<Id extends string, State = any> = [$Ctx<PluginSpec<State>, SlashPluginSpecId<Id>>, $Prose] & {\n  key: SliceType<PluginSpec<State>, SlashPluginSpecId<Id>>\n  pluginKey: $Prose['key']\n}\n\n/// Create a slash plugin with a unique id.\nexport function slashFactory<Id extends string, State = any>(id: Id) {\n  const slashSpec = $ctx<PluginSpec<State>, SlashPluginSpecId<Id>>({}, `${id}_SLASH_SPEC`)\n  const slashPlugin = $prose((ctx) => {\n    const spec = ctx.get(slashSpec.key)\n    return new Plugin({\n      key: new PluginKey(`${id}_SLASH`),\n      ...spec,\n    })\n  })\n  const result = [slashSpec, slashPlugin] as SlashPlugin<Id>\n  result.key = slashSpec.key\n  result.pluginKey = slashPlugin.key\n  slashSpec.meta = {\n    package: '@milkdown/plugin-slash',\n    displayName: `Ctx<slashSpec>|${id}`,\n  }\n  slashPlugin.meta = {\n    package: '@milkdown/plugin-slash',\n    displayName: `Prose<slash>|${id}`,\n  }\n\n  return result\n}\n", "import { findParentNode, posToDOMRect } from '@milkdown/prose'\nimport type { EditorState } from '@milkdown/prose/state'\nimport type { Node } from '@milkdown/prose/model'\nimport { TextSelection } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport debounce from 'lodash.debounce'\nimport type { VirtualElement } from '@floating-ui/dom'\nimport { computePosition, flip, offset } from '@floating-ui/dom'\n\n/// Options for slash provider.\nexport interface SlashProviderOptions {\n  /// The slash content.\n  content: HTMLElement\n  /// The debounce time for updating slash, 200ms by default.\n  debounce?: number\n  /// The function to determine whether the tooltip should be shown.\n  shouldShow?: (view: EditorView, prevState?: EditorState) => boolean\n  /// The key trigger for shouldShow, '/' by default.\n  trigger?: string | string[]\n  /// The offset to get the block. Default is 0.\n  offset?: number | {\n    mainAxis?: number\n    crossAxis?: number\n    alignmentAxis?: number | null\n  }\n}\n\n/// A provider for creating slash.\nexport class SlashProvider {\n  /// The root element of the slash.\n  element: HTMLElement\n\n  /// @internal\n  #initialized = false\n\n  /// @internal\n  readonly #debounce: number\n\n  /// @internal\n  readonly #trigger: string | string[]\n\n  /// @internal\n  readonly #shouldShow: (view: EditorView, prevState?: EditorState) => boolean\n\n  /// The offset to get the block. Default is 0.\n  readonly #offset?: number | {\n    mainAxis?: number\n    crossAxis?: number\n    alignmentAxis?: number | null\n  }\n\n  /// On show callback.\n  onShow = () => {}\n\n  /// On hide callback.\n  onHide = () => {}\n\n  constructor(options: SlashProviderOptions) {\n    this.element = options.content\n    this.#debounce = options.debounce ?? 200\n    this.#shouldShow = options.shouldShow ?? this.#_shouldShow\n    this.#trigger = options.trigger ?? '/'\n    this.#offset = options.offset\n  }\n\n  /// @internal\n  #onUpdate = (view: EditorView, prevState?: EditorState): void => {\n    const { state, composing } = view\n    const { selection, doc } = state\n    const { ranges } = selection\n    const from = Math.min(...ranges.map(range => range.$from.pos))\n    const to = Math.max(...ranges.map(range => range.$to.pos))\n    const isSame = prevState && prevState.doc.eq(doc) && prevState.selection.eq(selection)\n\n    if (!this.#initialized) {\n      view.dom.parentElement?.appendChild(this.element)\n      this.#initialized = true\n    }\n\n    if (composing || isSame)\n      return\n\n    if (!this.#shouldShow(view, prevState)) {\n      this.hide()\n      return\n    }\n\n    const virtualEl: VirtualElement = {\n      getBoundingClientRect: () => posToDOMRect(view, from, to),\n    }\n    computePosition(virtualEl, this.element, {\n      placement: 'bottom-start',\n      middleware: [flip(), offset(this.#offset)],\n    })\n      .then(({ x, y }) => {\n        Object.assign(this.element.style, {\n          left: `${x}px`,\n          top: `${y}px`,\n        })\n      })\n\n    this.show()\n  }\n\n  /// @internal\n  #_shouldShow(view: EditorView): boolean {\n    const currentTextBlockContent = this.getContent(view)\n\n    if (!currentTextBlockContent)\n      return false\n\n    const target = currentTextBlockContent.at(-1)\n\n    if (!target)\n      return false\n\n    return Array.isArray(this.#trigger) ? this.#trigger.includes(target) : this.#trigger === target\n  }\n\n  /// Update provider state by editor view.\n  update = (view: EditorView, prevState?: EditorState): void => {\n    const updater = debounce(this.#onUpdate, this.#debounce)\n\n    updater(view, prevState)\n  }\n\n  /// Get the content of the current text block.\n  /// Pass the `matchNode` function to determine whether the current node should be matched, by default, it will match the paragraph node.\n  getContent = (view: EditorView, matchNode: (node: Node) => boolean = node => node.type.name === 'paragraph'): string | undefined => {\n    const { selection } = view.state\n    const { empty, $from } = selection\n    const isTextBlock = view.state.selection instanceof TextSelection\n\n    const isSlashChildren = this.element.contains(document.activeElement)\n\n    const notHasFocus = !view.hasFocus() && !isSlashChildren\n\n    const isReadonly = !view.editable\n\n    const paragraph = findParentNode(matchNode)(view.state.selection)\n\n    const isNotInParagraph = !paragraph\n\n    if (notHasFocus || isReadonly || !empty || !isTextBlock || isNotInParagraph)\n      return\n\n    return $from.parent.textBetween(Math.max(0, $from.parentOffset - 500), $from.parentOffset, undefined, '\\uFFFC')\n  }\n\n  /// Destroy the slash.\n  destroy = () => {\n  }\n\n  /// Show the slash.\n  show = () => {\n    this.element.dataset.show = 'true'\n    this.onShow()\n  }\n\n  /// Hide the slash.\n  hide = () => {\n    this.element.dataset.show = 'false'\n    this.onHide()\n  }\n}\n", "import type { html } from 'atomico'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { Command, Transaction } from '@milkdown/kit/prose/state'\nimport type { Attrs, NodeType } from '@milkdown/kit/prose/model'\nimport { findWrapping } from '@milkdown/kit/prose/transform'\n\nexport interface MenuItem {\n  index: number\n  key: string\n  label: string\n  icon: ReturnType<typeof html>\n  onRun: (ctx: Ctx) => void\n}\n\ntype WithRange<T, HasIndex extends true | false = true> = HasIndex extends true ? T & { range: [start: number, end: number] } : T\n\nexport type MenuItemGroup<HasIndex extends true | false = true> = WithRange<{\n  key: string\n  label: string\n  items: HasIndex extends true ? MenuItem[] : Omit<MenuItem, 'index'>[]\n}, HasIndex>\n\nexport function clearRange(tr: Transaction) {\n  const { $from, $to } = tr.selection\n  const { pos: from } = $from\n  const { pos: to } = $to\n  tr = tr.deleteRange(from - $from.node().content.size, to)\n  return tr\n}\n\nexport function setBlockType(tr: Transaction, nodeType: NodeType, attrs: Attrs | null = null) {\n  const { from, to } = tr.selection\n  return tr.setBlockType(from, to, nodeType, attrs)\n}\n\nexport function wrapInBlockType(tr: Transaction, nodeType: NodeType, attrs: Attrs | null = null) {\n  const { $from, $to } = tr.selection\n\n  const range = $from.blockRange($to)\n  const wrapping = range && findWrapping(range, nodeType, attrs)\n  if (!wrapping)\n    return null\n\n  return tr.wrap(range, wrapping)\n}\n\nexport function addBlockType(tr: Transaction, nodeType: NodeType, attrs: Attrs | null = null) {\n  const node = nodeType.createAndFill(attrs)\n  if (!node)\n    return null\n\n  return tr.replaceSelectionWith(node)\n}\n\nexport function clearContentAndSetBlockType(nodeType: NodeType, attrs: Attrs | null = null): Command {\n  return (state, dispatch) => {\n    if (dispatch) {\n      const tr = setBlockType(clearRange(state.tr), nodeType, attrs)\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n}\n\nexport function clearContentAndWrapInBlockType(nodeType: NodeType, attrs: Attrs | null = null): Command {\n  return (state, dispatch) => {\n    const tr = wrapInBlockType(clearRange(state.tr), nodeType, attrs)\n    if (!tr)\n      return false\n\n    if (dispatch)\n      dispatch(tr.scrollIntoView())\n\n    return true\n  }\n}\n\nexport function clearContentAndAddBlockType(nodeType: NodeType, attrs: Attrs | null = null): Command {\n  return (state, dispatch) => {\n    const tr = addBlockType(clearRange(state.tr), nodeType, attrs)\n    if (!tr)\n      return false\n\n    if (dispatch)\n      dispatch(tr.scrollIntoView())\n\n    return true\n  }\n}\n", "import type { MenuItem, MenuItemGroup } from './utils'\n\nexport class GroupBuilder {\n  #groups: MenuItemGroup<false>[] = []\n\n  clear = () => {\n    this.#groups = []\n    return this\n  }\n\n  #getGroupInstance = (group: MenuItemGroup<false>) => {\n    const groupInstance = {\n      group,\n      addItem: (key: string, item: Omit<MenuItem, 'key' | 'index'>) => {\n        const data = { key, ...item }\n        group.items.push(data)\n        return groupInstance\n      },\n      clear: () => {\n        group.items = []\n        return groupInstance\n      },\n    }\n    return groupInstance\n  }\n\n  addGroup = (key: string, label: string) => {\n    const items: Omit<MenuItem, 'index'>[] = []\n    const group: MenuItemGroup<false> = {\n      key,\n      label,\n      items,\n    }\n    this.#groups.push(group)\n\n    return this.#getGroupInstance(group)\n  }\n\n  getGroup = (key: string) => {\n    const group = this.#groups.find(group => group.key === key)\n    if (!group)\n      throw new Error(`Group with key ${key} not found`)\n\n    return this.#getGroupInstance(group)\n  }\n\n  build = () => {\n    return this.#groups\n  }\n}\n", "import { editorViewCtx } from '@milkdown/kit/core'\nimport {\n  blockquoteSchema,\n  bulletListSchema,\n  codeBlockSchema,\n  headingSchema,\n  hrSchema,\n  listItemSchema,\n  orderedListSchema,\n  paragraphSchema,\n} from '@milkdown/kit/preset/commonmark'\nimport { NodeSelection } from '@milkdown/kit/prose/state'\nimport { imageBlockSchema } from '@milkdown/kit/component/image-block'\nimport { createTable } from '@milkdown/kit/preset/gfm'\nimport {\n  bulletListIcon,\n  codeIcon,\n  dividerIcon,\n  h1Icon,\n  h2Icon,\n  h3Icon,\n  h4Icon,\n  h5Icon,\n  h6Icon,\n  imageIcon,\n  orderedListIcon,\n  quoteIcon,\n  tableIcon,\n  textIcon,\n  todoListIcon,\n} from '../../../icons'\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { MenuItemGroup } from './utils'\nimport {\n  clearContentAndAddBlockType,\n  clearContentAndSetBlockType,\n  clearContentAndWrapInBlockType,\n  clearRange,\n} from './utils'\nimport { GroupBuilder } from './group-builder'\n\nexport function getGroups(filter?: string, config?: BlockEditFeatureConfig) {\n  const groupBuilder = new GroupBuilder()\n  groupBuilder\n    .addGroup('text', config?.slashMenuTextGroupLabel ?? 'Text')\n    .addItem('text', {\n      label: config?.slashMenuTextGroupLabel ?? 'Text',\n      icon: config?.slashMenuTextIcon?.() ?? textIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(paragraphSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('h1', {\n      label: config?.slashMenuH1Label ?? 'Heading 1',\n      icon: config?.slashMenuH1Icon?.() ?? h1Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), { level: 1 })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h2', {\n      label: config?.slashMenuH2Label ?? 'Heading 2',\n      icon: config?.slashMenuH2Icon?.() ?? h2Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), { level: 2 })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h3', {\n      label: config?.slashMenuH3Label ?? 'Heading 3',\n      icon: config?.slashMenuH3Icon?.() ?? h3Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), { level: 3 })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h4', {\n      label: config?.slashMenuH4Label ?? 'Heading 4',\n      icon: config?.slashMenuH4Icon?.() ?? h4Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), { level: 4 })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h5', {\n      label: config?.slashMenuH5Label ?? 'Heading 5',\n      icon: config?.slashMenuH5Icon?.() ?? h5Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), { level: 5 })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h6', {\n      label: config?.slashMenuH6Label ?? 'Heading 6',\n      icon: config?.slashMenuH6Icon?.() ?? h6Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), { level: 6 })\n        command(state, dispatch)\n      },\n    })\n    .addItem('quote', {\n      label: config?.slashMenuQuoteLabel ?? 'Quote',\n      icon: config?.slashMenuQuoteIcon?.() ?? quoteIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(blockquoteSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('divider', {\n      label: config?.slashMenuDividerLabel ?? 'Divider',\n      icon: config?.slashMenuDividerIcon?.() ?? dividerIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(hrSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n\n  groupBuilder.addGroup('list', config?.slashMenuListGroupLabel ?? 'List')\n    .addItem('bullet-list', {\n      label: config?.slashMenuBulletListLabel ?? 'Bullet List',\n      icon: config?.slashMenuBulletListIcon?.() ?? bulletListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(bulletListSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('ordered-list', {\n      label: config?.slashMenuOrderedListLabel ?? 'Ordered List',\n      icon: config?.slashMenuOrderedListIcon?.() ?? orderedListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(orderedListSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('todo-list', {\n      label: config?.slashMenuTaskListLabel ?? 'Todo List',\n      icon: config?.slashMenuTaskListIcon?.() ?? todoListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(listItemSchema.type(ctx), { checked: false })\n        command(state, dispatch)\n      },\n    })\n\n  groupBuilder.addGroup('advanced', config?.slashMenuAdvancedGroupLabel ?? 'Advanced')\n    .addItem('image', {\n      label: config?.slashMenuImageLabel ?? 'Image',\n      icon: config?.slashMenuImageIcon?.() ?? imageIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(imageBlockSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('code', {\n      label: config?.slashMenuCodeBlockLabel ?? 'Code',\n      icon: config?.slashMenuCodeBlockIcon?.() ?? codeIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(codeBlockSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('table', {\n      label: config?.slashMenuTableLabel ?? 'Table',\n      icon: config?.slashMenuTableIcon?.() ?? tableIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n        const tr = clearRange(state.tr)\n        const table = createTable(ctx, 3, 3)\n        tr.replaceSelectionWith(table)\n        const { from } = tr.selection\n        const pos = from - table.nodeSize + 2\n        dispatch(tr)\n        requestAnimationFrame(() => {\n          const selection = NodeSelection.create(view.state.tr.doc, pos)\n          dispatch(view.state.tr.setSelection(selection).scrollIntoView())\n        })\n      },\n    })\n\n  config?.buildMenu?.(groupBuilder)\n\n  let groups = groupBuilder.build()\n\n  if (filter) {\n    groups = groups\n      .map((group) => {\n        const items = group\n          .items\n          .filter(item =>\n            item\n              .label\n              .toLowerCase()\n              .includes(filter.toLowerCase()))\n\n        return {\n          ...group,\n          items,\n        }\n      })\n      .filter(group => group.items.length > 0)\n  }\n\n  const items = groups.flatMap(groups => groups.items)\n  items.forEach(((item, index) => {\n    Object.assign(item, { index })\n  }))\n\n  groups.reduce((acc, group) => {\n    const end = acc + group.items.length\n    Object.assign(group, {\n      range: [acc, end],\n    })\n    return end\n  }, 0)\n\n  return {\n    groups: groups as MenuItemGroup[],\n    size: items.length,\n  }\n}\n", "import type { Component } from 'atomico'\nimport { c, html, useCallback, useEffect, useHost, useMemo, useRef, useState } from 'atomico'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { BlockEditFeatureConfig } from '../index'\nimport { getGroups } from './config'\n\nexport interface MenuProps {\n  ctx: Ctx\n  show: boolean\n  filter: string\n  hide: () => void\n  config?: BlockEditFeatureConfig\n}\n\nexport const menuComponent: Component<MenuProps> = ({\n  show,\n  hide,\n  ctx,\n  filter,\n  config,\n}) => {\n  const { groups, size } = useMemo(() => getGroups(filter, config), [filter])\n\n  const host = useHost()\n  const [hoverIndex, setHoverIndex] = useState(0)\n\n  const root = useMemo(() => host.current.getRootNode() as HTMLElement, [host])\n\n  const prevMousePosition = useRef({ x: -999, y: -999 })\n\n  const onMouseMove = useCallback((e: MouseEvent) => {\n    const prevPos = prevMousePosition.current\n    if (!prevPos)\n      return\n\n    const { x, y } = e\n    prevPos.x = x\n    prevPos.y = y\n  }, [])\n\n  useEffect(() => {\n    if (size === 0 && show)\n      hide?.()\n  }, [size, show])\n\n  const onHover = useCallback((\n    index: number | ((prev: number) => number),\n    after?: (index: number) => void,\n  ) => {\n    setHoverIndex((prev) => {\n      const next = typeof index === 'function' ? index(prev) : index\n\n      after?.(next)\n      return next\n    })\n  }, [])\n\n  const scrollToIndex = useCallback((index: number) => {\n    const target = host\n      .current\n      .querySelector<HTMLElement>(`[data-index=\"${index}\"]`)\n    const scrollRoot = host.current.querySelector<HTMLElement>('.menu-groups')\n\n    if (!target || !scrollRoot)\n      return\n\n    scrollRoot.scrollTop = target.offsetTop - scrollRoot.offsetTop\n  }, [])\n\n  const runByIndex = useCallback((index: number) => {\n    const item = groups.flatMap(group => group.items).at(index)\n    if (item && ctx)\n      item.onRun(ctx)\n\n    hide?.()\n  }, [groups])\n\n  const onKeydown = useCallback((e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      e.preventDefault()\n      hide?.()\n      return\n    }\n\n    if (e.key === 'ArrowDown') {\n      e.preventDefault()\n      return onHover(index => (index < size - 1) ? index + 1 : index, scrollToIndex)\n    }\n\n    if (e.key === 'ArrowUp') {\n      e.preventDefault()\n      return onHover(index => index <= 0 ? index : index - 1, scrollToIndex)\n    }\n\n    if (e.key === 'ArrowLeft') {\n      e.preventDefault()\n      return onHover((index) => {\n        const group = groups.find(group => group.range[0] <= index && group.range[1] > index)\n        if (!group)\n          return index\n\n        const prevGroup = groups[groups.indexOf(group) - 1]\n        if (!prevGroup)\n          return index\n\n        return prevGroup.range[1] - 1\n      }, scrollToIndex)\n    }\n\n    if (e.key === 'ArrowRight') {\n      e.preventDefault()\n      return onHover((index) => {\n        const group = groups.find(group => group.range[0] <= index && group.range[1] > index)\n        if (!group)\n          return index\n\n        const nextGroup = groups[groups.indexOf(group) + 1]\n        if (!nextGroup)\n          return index\n\n        return nextGroup.range[0]\n      }, scrollToIndex)\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault()\n      runByIndex(hoverIndex)\n    }\n  }, [hide, groups, hoverIndex])\n\n  const onMouseEnter = useCallback((index: number) => {\n    return (e: MouseEvent) => {\n      const prevPos = prevMousePosition.current\n      if (!prevPos)\n        return\n\n      const { x, y } = e\n      if (x === prevPos.x && y === prevPos.y)\n        return\n\n      onHover(index)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (show)\n      root.addEventListener('keydown', onKeydown, { capture: true })\n\n    else root.removeEventListener('keydown', onKeydown, { capture: true })\n\n    return () => {\n      root.removeEventListener('keydown', onKeydown, { capture: true })\n    }\n  }, [show, onKeydown])\n\n  return html`\n    <host onmousedown=${(e: MouseEvent) => e.preventDefault()}>\n      <nav class=\"tab-group\">\n        <ul>\n          ${groups.map(group =>\n            html`<li\n              key=${group.key}\n              onmousedown=${() => onHover(group.range[0], scrollToIndex)}\n              class=${hoverIndex >= group.range[0] && hoverIndex < group.range[1] ? 'selected' : ''}\n            >\n              ${group.label}\n            </li>`)}\n        </ul>\n      </nav>\n      <div class=\"menu-groups\" onmousemove=${onMouseMove}>\n        ${groups.map((group) => {\n          return html`\n            <div key=${group.key} class=\"menu-group\">\n              <h6>${group.label}</h6>\n              <ul>\n                ${group.items.map(item =>\n                  html`<li\n                    key=${item.key}\n                    data-index=${item.index}\n                    class=${hoverIndex === item.index ? 'hover' : ''}\n                    onmouseenter=${onMouseEnter(item.index)}\n                    onmousedown=${() => {\n                      host\n                        .current\n                        .querySelector(`[data-index=\"${item.index}\"]`)\n                        ?.classList.add('active')\n                    }}\n                    onmouseup=${() => {\n                      host\n                        .current\n                        .querySelector(`[data-index=\"${item.index}\"]`)\n                        ?.classList.remove('active')\n                      runByIndex(item.index)\n                    }}\n                  >\n                    ${item.icon}\n                    <span>${item.label}</span>\n                  </li>`,\n                )}\n              </ul>\n            </div>\n          `\n        })}\n      </div>\n    </host>\n  `\n}\n\nmenuComponent.props = {\n  ctx: Object,\n  config: Object,\n  show: Boolean,\n  filter: String,\n  hide: Function,\n}\n\nexport const MenuElement = c(menuComponent)\n", "import type { PluginView } from '@milkdown/kit/prose/state'\nimport type { EditorView } from '@milkdown/kit/prose/view'\nimport { SlashProvider, slashFactory } from '@milkdown/kit/plugin/slash'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { AtomicoThis } from 'atomico/types/dom'\nimport { $ctx } from '@milkdown/kit/utils'\nimport { defIfNotExists, isInCodeBlock, isInList } from '../../../utils'\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { MenuProps } from './component'\nimport { MenuElement } from './component'\n\nexport const menu = slashFactory('CREPE_MENU')\n\nexport interface MenuAPI {\n  show: (pos: number) => void\n  hide: () => void\n}\n\nexport const menuAPI = $ctx({\n  show: () => {},\n  hide: () => {},\n} as MenuAPI, 'menuAPICtx')\n\ndefIfNotExists('milkdown-slash-menu', MenuElement)\nexport function configureMenu(ctx: Ctx, config?: BlockEditFeatureConfig) {\n  ctx.set(menu.key, {\n    view: view => new MenuView(ctx, view, config),\n  })\n}\n\nclass MenuView implements PluginView {\n  readonly #content: AtomicoThis<MenuProps, HTMLElement>\n  readonly #slashProvider: SlashProvider\n  #programmaticallyPos: number | null = null\n\n  constructor(ctx: Ctx, view: EditorView, config?: BlockEditFeatureConfig) {\n    this.#content = new MenuElement()\n    this.#content.hide = this.hide\n    this.#content.ctx = ctx\n    this.#content.config = config\n    // eslint-disable-next-line ts/no-this-alias\n    const self = this\n    this.#slashProvider = new SlashProvider({\n      content: this.#content,\n      debounce: 20,\n      shouldShow(this: SlashProvider, view: EditorView) {\n        if (isInCodeBlock(view.state.selection) || isInList(view.state.selection))\n          return false\n\n        const currentText = this.getContent(view, node =>\n          ['paragraph', 'heading'].includes(node.type.name))\n\n        if (currentText == null)\n          return false\n\n        const pos = self.#programmaticallyPos\n\n        self.#content.filter = currentText.startsWith('/') ? currentText.slice(1) : currentText\n\n        if (typeof pos === 'number') {\n          if (view.state.doc.resolve(pos).node() !== view.state.doc.resolve(view.state.selection.from).node()) {\n            self.#programmaticallyPos = null\n\n            return false\n          }\n\n          return true\n        }\n\n        if (!currentText.startsWith('/'))\n          return false\n\n        return true\n      },\n      offset: 10,\n    })\n\n    this.#slashProvider.onShow = () => {\n      this.#content.show = true\n    }\n    this.#slashProvider.onHide = () => {\n      this.#content.show = false\n    }\n    this.update(view)\n\n    ctx.set(menuAPI.key, {\n      show: pos => this.show(pos),\n      hide: () => this.hide(),\n    })\n  }\n\n  update = (view: EditorView) => {\n    this.#slashProvider.update(view)\n  }\n\n  show = (pos: number) => {\n    this.#programmaticallyPos = pos\n    this.#content.filter = ''\n    this.#slashProvider.show()\n  }\n\n  hide = () => {\n    this.#programmaticallyPos = null\n    this.#slashProvider.hide()\n  }\n\n  destroy = () => {\n    this.#slashProvider.destroy()\n    this.#content.remove()\n  }\n}\n", "import { type Component, c, html, useEffect, useRef } from 'atomico'\nimport { menuIcon, plusIcon } from '../../../icons'\nimport type { Icon } from '../../shared'\n\nexport interface BlockHandleProps {\n  show: boolean\n  onAdd: () => void\n  addIcon: Icon\n  handleIcon: Icon\n}\n\nconst blockHandleComponent: Component<BlockHandleProps> = ({\n  onAdd,\n  addIcon,\n  handleIcon,\n}) => {\n  const ref = useRef<HTMLDivElement>()\n  useEffect(() => {\n    ref.current?.classList.remove('active')\n  })\n  const onMouseDown = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    ref.current?.classList.add('active')\n  }\n  const onMouseUp = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onAdd?.()\n    ref.current?.classList.remove('active')\n  }\n  return html`\n    <host>\n      <div ref=${ref} onmousedown=${onMouseDown} onmouseup=${onMouseUp} class=\"operation-item\">\n        ${addIcon?.() || plusIcon}\n      </div>\n      <div class=\"operation-item\">\n        ${handleIcon?.() || menuIcon}\n      </div>\n    </host>\n  `\n}\n\nblockHandleComponent.props = {\n  show: Boolean,\n  onAdd: Function,\n  addIcon: Function,\n  handleIcon: Function,\n}\n\nexport const BlockHandleElement = c(blockHandleComponent)\n", "import type { PluginView } from '@milkdown/kit/prose/state'\nimport { TextSelection } from '@milkdown/kit/prose/state'\nimport { BlockProvider, block, blockConfig } from '@milkdown/kit/plugin/block'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { AtomicoThis } from 'atomico/types/dom'\nimport { editorViewCtx } from '@milkdown/kit/core'\nimport { paragraphSchema } from '@milkdown/kit/preset/commonmark'\nimport { findParent } from '@milkdown/kit/prose'\nimport { menuAPI } from '../menu'\nimport { defIfNotExists } from '../../../utils'\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { BlockHandleProps } from './component'\nimport { BlockHandleElement } from './component'\n\nexport class BlockHandleView implements PluginView {\n  #content: AtomicoThis<BlockHandleProps>\n  #provider: BlockProvider\n  readonly #ctx: Ctx\n\n  constructor(ctx: Ctx, config?: BlockEditFeatureConfig) {\n    this.#ctx = ctx\n    const content = new BlockHandleElement()\n    this.#content = content\n    this.#content.onAdd = this.onAdd\n    this.#content.addIcon = config?.handleAddIcon\n    this.#content.handleIcon = config?.handleDragIcon\n    this.#provider = new BlockProvider({\n      ctx,\n      content,\n      getOffset: () => 16,\n      getPlacement: ({ active, blockDom }) => {\n        if (active.node.type.name === 'heading')\n          return 'left'\n\n        let totalDescendant = 0\n        active.node.descendants((node) => {\n          totalDescendant += node.childCount\n        })\n        const dom = active.el\n        const domRect = dom.getBoundingClientRect()\n        const handleRect = blockDom.getBoundingClientRect()\n        const style = window.getComputedStyle(dom)\n        const paddingTop = Number.parseInt(style.paddingTop, 10) || 0\n        const paddingBottom = Number.parseInt(style.paddingBottom, 10) || 0\n        const height = domRect.height - paddingTop - paddingBottom\n        const handleHeight = handleRect.height\n        return totalDescendant > 2 || handleHeight < height ? 'left-start' : 'left'\n      },\n    })\n    this.update()\n  }\n\n  update = () => {\n    this.#provider.update()\n  }\n\n  destroy = () => {\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n\n  onAdd = () => {\n    const ctx = this.#ctx\n    const view = ctx.get(editorViewCtx)\n    if (!view.hasFocus())\n      view.focus()\n\n    const { state, dispatch } = view\n    const active = this.#provider.active\n    if (!active)\n      return\n\n    const $pos = active.$pos\n    const pos = $pos.pos + active.node.nodeSize\n    let tr = state.tr.insert(pos, paragraphSchema.type(ctx).create())\n    tr = tr.setSelection(TextSelection.near(tr.doc.resolve(pos)))\n    dispatch(tr.scrollIntoView())\n\n    this.#provider.hide()\n    ctx.get(menuAPI.key).show(tr.selection.from)\n  }\n}\n\ndefIfNotExists('milkdown-block-handle', BlockHandleElement)\nexport function configureBlockHandle(ctx: Ctx, config?: BlockEditFeatureConfig) {\n  ctx.set(blockConfig.key, {\n    filterNodes: (pos) => {\n      const filter = findParent(node => ['table', 'blockquote'].includes(node.type.name))(pos)\n      if (filter)\n        return false\n\n      return true\n    },\n  })\n  ctx.set(block.key, {\n    view: () => new BlockHandleView(ctx, config),\n  })\n}\n", "import { block } from '@milkdown/kit/plugin/block'\nimport type { DefineFeature, Icon } from '../shared'\nimport { configureBlockHandle } from './handle'\nimport { configureMenu, menu, menuAPI } from './menu'\nimport type { GroupBuilder } from './menu/group-builder'\n\ninterface BlockEditConfig {\n  handleAddIcon: Icon\n  handleDragIcon: Icon\n  buildMenu: (builder: GroupBuilder) => void\n\n  slashMenuTextGroupLabel: string\n  slashMenuTextIcon: Icon\n  slashMenuTextLabel: string\n  slashMenuH1Icon: Icon\n  slashMenuH1Label: string\n  slashMenuH2Icon: Icon\n  slashMenuH2Label: string\n  slashMenuH3Icon: Icon\n  slashMenuH3Label: string\n  slashMenuH4Icon: Icon\n  slashMenuH4Label: string\n  slashMenuH5Icon: Icon\n  slashMenuH5Label: string\n  slashMenuH6Icon: Icon\n  slashMenuH6Label: string\n  slashMenuQuoteIcon: Icon\n  slashMenuQuoteLabel: string\n  slashMenuDividerIcon: Icon\n  slashMenuDividerLabel: string\n\n  slashMenuListGroupLabel: string\n  slashMenuBulletListIcon: Icon\n  slashMenuBulletListLabel: string\n  slashMenuOrderedListIcon: Icon\n  slashMenuOrderedListLabel: string\n  slashMenuTaskListIcon: Icon\n  slashMenuTaskListLabel: string\n\n  slashMenuAdvancedGroupLabel: string\n  slashMenuImageIcon: Icon\n  slashMenuImageLabel: string\n  slashMenuCodeBlockIcon: Icon\n  slashMenuCodeBlockLabel: string\n  slashMenuTableIcon: Icon\n  slashMenuTableLabel: string\n}\n\nexport type BlockEditFeatureConfig = Partial<BlockEditConfig>\n\nexport const defineFeature: DefineFeature<BlockEditFeatureConfig> = (editor, config) => {\n  editor\n    .config(ctx => configureBlockHandle(ctx, config))\n    .config(ctx => configureMenu(ctx, config))\n    .use(menuAPI)\n    .use(block)\n    .use(menu)\n}\n"],
  "mappings": "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",
  "names": ["withMeta", "plugin", "meta", "defaultNodeFilter", "pos", "findParent", "node", "blockConfig", "$ctx", "selectRootNodeByDom", "view", "coords", "filterNodes", "_a", "$pos", "element", "filter", "needLookup", "checkDepth", "ancestorPos", "filterResult", "_detachedDoc", "detachedDoc", "wrapMap", "serializeForClipboard", "slice", "context", "openStart", "openEnd", "content", "serializer", "DOMSerializer", "doc", "wrap", "firstChild", "needsWrap", "wrappers", "i", "wrapper", "text", "f", "brokenClipboardAPI", "browser", "buffer", "BlockService", "__privateAdd", "_filterNodes", "_view", "_ctx", "_createSelection", "_activeSelection", "_active", "_activeDOMRect", "_dragging", "_notify", "_hide", "_show", "_handleMouseDown", "_handleMouseUp", "_handleDragStart", "_mousemoveCallback", "_dragEnd", "__privateSet", "__privateGet", "result", "view_get", "NodeSelection", "nodeSelection", "active", "ctx", "notify", "dom", "event", "selection", "activeEl", "throttle", "rect", "x", "filterNodes_get", "root", "hasHorizontalScrollbar", "rootRect", "top", "totalHeight", "y", "editorViewCtx", "blockService", "blockSpec", "blockPlugin", "$prose", "milkdownPluginBlockKey", "PluginKey", "service", "spec", "Plugin", "BlockProvider", "options", "_init", "_element", "_service", "_activeNode", "_initialized", "_getOffset", "_getPosition", "_getPlacement", "__privateMethod", "init_fn", "_b", "editorDom", "deriveContext", "virtualEl", "middleware", "flip", "offsetOption", "offsetExt", "offset", "computePosition", "message", "block", "slashFactory", "id", "slashSpec", "$ctx", "slashPlugin", "$prose", "ctx", "spec", "Plugin", "PluginKey", "result", "SlashProvider", "options", "__privateAdd", "__shouldShow", "_initialized", "_debounce", "_trigger", "_shouldShow", "_offset", "_onUpdate", "__privateSet", "view", "prevState", "state", "composing", "selection", "doc", "ranges", "from", "range", "to", "isSame", "__privateGet", "_a", "computePosition", "posToDOMRect", "flip", "offset", "x", "y", "debounce", "matchNode", "i", "node", "empty", "$from", "isTextBlock", "TextSelection", "isSlashChildren", "notHasFocus", "isReadonly", "isNotInParagraph", "findParentNode", "__privateMethod", "_shouldShow_fn", "currentTextBlockContent", "target", "__privateAdd", "__privateSet", "__privateGet", "group", "items", "groups", "x", "y", "_content", "view", "Q", "ctx"]
}
