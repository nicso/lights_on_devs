import { useMemo, useState, createRef } from "atomico";
import { createMatch } from "@uppercod/exp-route";
import { useListener } from "@atomico/use-listener";
import { getPath, redirect } from "./history.js";
export * from "./history.js";
const refGlobalThis = createRef(globalThis);
const cache = {};
export function useRouter(router, memo) {
    const [id, setId] = useState(getPath);
    useListener(refGlobalThis, "popstate", () => {
        setId(getPath);
    });
    return useMemo(() => {
        for (const path in router) {
            cache[path] = cache[path] || createMatch(path);
            const params = cache[path](id);
            if (params) {
                const result = router[path](params, { id, path });
                return { result, id, path, params, redirect };
            }
        }
    }, [id, memo]);
}
