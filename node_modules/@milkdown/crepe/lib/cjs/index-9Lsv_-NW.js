'use strict';

var listItemBlock = require('@milkdown/kit/component/list-item-block');
var atomico = require('atomico');
var clsx = require('clsx');
var todoList = require('./todoList-Qb2JsRGC.js');

function configureListItem(ctx, config) {
  ctx.set(listItemBlock.listItemBlockConfig.key, {
    renderLabel: ({ label, listType, checked, readonly }) => {
      var _a, _b, _c, _d, _e, _f;
      if (checked == null) {
        if (listType === "bullet")
          return atomico.html`<span class='label'>${(_b = (_a = config == null ? void 0 : config.bulletIcon) == null ? void 0 : _a.call(config)) != null ? _b : todoList.bulletIcon}</span>`;
        return atomico.html`<span class='label'>${label}</span>`;
      }
      if (checked)
        return atomico.html`<span class=${clsx("label checkbox", readonly && "readonly")}>${(_d = (_c = config == null ? void 0 : config.checkBoxCheckedIcon) == null ? void 0 : _c.call(config)) != null ? _d : todoList.checkBoxCheckedIcon}</span>`;
      return atomico.html`<span class=${clsx("label checkbox", readonly && "readonly")}>${(_f = (_e = config == null ? void 0 : config.checkBoxUncheckedIcon) == null ? void 0 : _e.call(config)) != null ? _f : todoList.checkBoxUncheckedIcon}</span>`;
    }
  });
}
const defineFeature = (editor, config) => {
  editor.config((ctx) => configureListItem(ctx, config)).use(listItemBlock.listItemBlockComponent);
};

exports.defineFeature = defineFeature;
//# sourceMappingURL=index-9Lsv_-NW.js.map
