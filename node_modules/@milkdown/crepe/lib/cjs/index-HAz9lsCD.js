'use strict';

var codeBlock = require('@milkdown/kit/component/code-block');
var codemirror = require('codemirror');
var view = require('@codemirror/view');
var commands = require('@codemirror/commands');
var todoList = require('./todoList-Qb2JsRGC.js');
require('atomico');

const defineFeature = (editor, config = {}) => {
  editor.config(async (ctx) => {
    let {
      languages,
      theme
    } = config;
    if (!languages) {
      const { languages: langList } = await import('@codemirror/language-data');
      languages = langList;
    }
    if (!theme) {
      const { oneDark } = await import('@codemirror/theme-one-dark');
      theme = oneDark;
    }
    ctx.update(codeBlock.codeBlockConfig.key, (defaultConfig) => {
      var _a;
      return {
        extensions: [
          view.keymap.of(commands.defaultKeymap.concat(commands.indentWithTab)),
          codemirror.basicSetup,
          theme,
          ...(_a = config == null ? void 0 : config.extensions) != null ? _a : []
        ],
        languages,
        expandIcon: config.expandIcon || (() => todoList.chevronDownIcon),
        searchIcon: config.searchIcon || (() => todoList.searchIcon),
        clearSearchIcon: config.clearSearchIcon || (() => todoList.clearIcon),
        searchPlaceholder: config.searchPlaceholder || "Search language",
        noResultText: config.noResultText || "No result",
        renderLanguage: config.renderLanguage || defaultConfig.renderLanguage
      };
    });
  }).use(codeBlock.codeBlockComponent);
};

exports.defineFeature = defineFeature;
//# sourceMappingURL=index-HAz9lsCD.js.map
