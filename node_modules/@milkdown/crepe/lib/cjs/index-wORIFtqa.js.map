{"version":3,"file":"index-wORIFtqa.js","sources":["../../src/feature/toolbar/component.ts","../../src/feature/toolbar/index.ts"],"sourcesContent":["import type { Component } from 'atomico'\nimport { c, html, useEffect, useUpdate } from 'atomico'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport { commandsCtx, editorViewCtx } from '@milkdown/kit/core'\nimport {\n  emphasisSchema,\n  inlineCodeSchema,\n  linkSchema,\n  strongSchema,\n  toggleEmphasisCommand,\n  toggleInlineCodeCommand,\n  toggleStrongCommand,\n} from '@milkdown/kit/preset/commonmark'\nimport type { MarkType } from '@milkdown/kit/prose/model'\nimport clsx from 'clsx'\nimport { linkTooltipAPI } from '@milkdown/kit/component/link-tooltip'\nimport { strikethroughSchema, toggleStrikethroughCommand } from '@milkdown/kit/preset/gfm'\nimport { boldIcon, codeIcon, italicIcon, linkIcon, strikethroughIcon } from '../../icons'\nimport type { ToolbarFeatureConfig } from './index'\n\nexport interface ToolbarProps {\n  ctx: Ctx\n  hide: () => void\n  show: boolean\n  config?: ToolbarFeatureConfig\n}\n\nexport const toolbarComponent: Component<ToolbarProps> = ({\n  ctx,\n  hide,\n  show,\n  config,\n}) => {\n  const update = useUpdate()\n  useEffect(() => {\n    update()\n  }, [show])\n\n  const onClick = (fn: (ctx: Ctx) => void) => (e: MouseEvent) => {\n    e.preventDefault()\n    ctx && fn(ctx)\n    update()\n  }\n\n  const isActive = (mark: MarkType) => {\n    if (!ctx)\n      return false\n    const view = ctx.get(editorViewCtx)\n    const { state: { doc, selection } } = view\n    return doc.rangeHasMark(selection.from, selection.to, mark)\n  }\n\n  return html`<host>\n    <button\n      class=${clsx('toolbar-item', ctx && isActive(strongSchema.type(ctx)) && 'active')}\n      onmousedown=${onClick((ctx) => {\n        const commands = ctx.get(commandsCtx)\n        commands.call(toggleStrongCommand.key)\n      })}\n    >\n      ${config?.boldIcon?.() ?? boldIcon}\n    </button>\n    <button\n      class=${clsx('toolbar-item', ctx && isActive(emphasisSchema.type(ctx)) && 'active')}\n      onmousedown=${onClick((ctx) => {\n        const commands = ctx.get(commandsCtx)\n        commands.call(toggleEmphasisCommand.key)\n      })}\n    >\n      ${config?.italicIcon?.() ?? italicIcon}\n    </button>\n    <button\n      class=${clsx('toolbar-item', ctx && isActive(strikethroughSchema.type(ctx)) && 'active')}\n      onmousedown=${onClick((ctx) => {\n        const commands = ctx.get(commandsCtx)\n        commands.call(toggleStrikethroughCommand.key)\n      })}\n    >\n      ${config?.strikethroughIcon?.() ?? strikethroughIcon}\n    </button>\n    <div class=\"divider\"></div>\n    <button\n      class=${clsx('toolbar-item', ctx && isActive(inlineCodeSchema.type(ctx)) && 'active')}\n      onmousedown=${onClick((ctx) => {\n        const commands = ctx.get(commandsCtx)\n        commands.call(toggleInlineCodeCommand.key)\n      })}\n    >\n      ${config?.codeIcon?.() ?? codeIcon}\n    </button>\n    <button\n      class=${clsx('toolbar-item', ctx && isActive(linkSchema.type(ctx)) && 'active')}\n      onmousedown=${onClick((ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { selection } = view.state\n\n        if (isActive(linkSchema.type(ctx))) {\n          ctx.get(linkTooltipAPI.key).removeLink(selection.from, selection.to)\n          return\n        }\n\n        ctx.get(linkTooltipAPI.key).addLink(selection.from, selection.to)\n        hide?.()\n      })}\n    >\n      ${config?.linkIcon?.() ?? linkIcon}\n    </button>\n  </host>`\n}\n\ntoolbarComponent.props = {\n  ctx: Object,\n  hide: Function,\n  show: Boolean,\n  config: Object,\n}\n\nexport const ToolbarElement = c(toolbarComponent)\n","import { TooltipProvider, tooltipFactory } from '@milkdown/kit/plugin/tooltip'\nimport type { EditorState, PluginView } from '@milkdown/kit/prose/state'\nimport { TextSelection } from '@milkdown/kit/prose/state'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { EditorView } from '@milkdown/kit/prose/view'\nimport type { AtomicoThis } from 'atomico/types/dom'\nimport type { DefineFeature, Icon } from '../shared'\nimport { defIfNotExists } from '../../utils'\nimport type { ToolbarProps } from './component'\nimport { ToolbarElement } from './component'\n\ninterface ToolbarConfig {\n  boldIcon: Icon\n  codeIcon: Icon\n  italicIcon: Icon\n  linkIcon: Icon\n  strikethroughIcon: Icon\n}\n\nexport type ToolbarFeatureConfig = Partial<ToolbarConfig>\n\nconst toolbar = tooltipFactory('CREPE_TOOLBAR')\n\nclass ToolbarView implements PluginView {\n  #tooltipProvider: TooltipProvider\n  #content: AtomicoThis<ToolbarProps>\n  constructor(ctx: Ctx, view: EditorView, config?: ToolbarFeatureConfig) {\n    const content = new ToolbarElement()\n    this.#content = content\n    this.#content.ctx = ctx\n    this.#content.hide = this.hide\n    this.#content.config = config\n\n    this.#tooltipProvider = new TooltipProvider({\n      content: this.#content,\n      debounce: 20,\n      offset: 10,\n      shouldShow(view: EditorView) {\n        const { doc, selection } = view.state\n        const { empty, from, to } = selection\n\n        const isEmptyTextBlock = !doc.textBetween(from, to).length && selection instanceof TextSelection\n\n        const isNotTextBlock = !(selection instanceof TextSelection)\n\n        const activeElement = (view.dom.getRootNode() as ShadowRoot | Document).activeElement\n        const isTooltipChildren = content.contains(activeElement)\n\n        const notHasFocus = !view.hasFocus() && !isTooltipChildren\n\n        const isReadonly = !view.editable\n\n        if (\n          notHasFocus\n          || isNotTextBlock\n          || empty\n          || isEmptyTextBlock\n          || isReadonly\n        )\n          return false\n\n        return true\n      },\n    })\n    this.#tooltipProvider.onShow = () => {\n      this.#content.show = true\n    }\n    this.#tooltipProvider.onHide = () => {\n      this.#content.show = false\n    }\n    this.update(view)\n  }\n\n  update = (view: EditorView, prevState?: EditorState) => {\n    this.#tooltipProvider.update(view, prevState)\n  }\n\n  destroy = () => {\n    this.#tooltipProvider.destroy()\n    this.#content.remove()\n  }\n\n  hide = () => {\n    this.#tooltipProvider.hide()\n  }\n}\n\ndefIfNotExists('milkdown-toolbar', ToolbarElement)\nexport const defineFeature: DefineFeature<ToolbarFeatureConfig> = (editor, config) => {\n  editor\n    .config((ctx) => {\n      ctx.set(toolbar.key, {\n        view: view => new ToolbarView(ctx, view, config),\n      })\n    })\n    .use(toolbar)\n}\n"],"names":["useUpdate","useEffect","editorViewCtx","html","strongSchema","ctx","commandsCtx","toggleStrongCommand","boldIcon","emphasisSchema","toggleEmphasisCommand","italicIcon","strikethroughSchema","toggleStrikethroughCommand","strikethroughIcon","inlineCodeSchema","toggleInlineCodeCommand","codeIcon","linkSchema","linkTooltipAPI","linkIcon","c","tooltipFactory","TooltipProvider","view","TextSelection","defIfNotExists"],"mappings":"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"}