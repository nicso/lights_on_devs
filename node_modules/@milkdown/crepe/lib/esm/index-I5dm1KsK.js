import { codeBlockConfig, codeBlockComponent } from '@milkdown/kit/component/code-block';
import { basicSetup } from 'codemirror';
import { keymap } from '@codemirror/view';
import { defaultKeymap, indentWithTab } from '@codemirror/commands';
import { c as chevronDownIcon, s as searchIcon, a as clearIcon } from './todoList-eAxCDaQj.js';
import 'atomico';

const defineFeature = (editor, config = {}) => {
  editor.config(async (ctx) => {
    let {
      languages,
      theme
    } = config;
    if (!languages) {
      const { languages: langList } = await import('@codemirror/language-data');
      languages = langList;
    }
    if (!theme) {
      const { oneDark } = await import('@codemirror/theme-one-dark');
      theme = oneDark;
    }
    ctx.update(codeBlockConfig.key, (defaultConfig) => {
      var _a;
      return {
        extensions: [
          keymap.of(defaultKeymap.concat(indentWithTab)),
          basicSetup,
          theme,
          ...(_a = config == null ? void 0 : config.extensions) != null ? _a : []
        ],
        languages,
        expandIcon: config.expandIcon || (() => chevronDownIcon),
        searchIcon: config.searchIcon || (() => searchIcon),
        clearSearchIcon: config.clearSearchIcon || (() => clearIcon),
        searchPlaceholder: config.searchPlaceholder || "Search language",
        noResultText: config.noResultText || "No result",
        renderLanguage: config.renderLanguage || defaultConfig.renderLanguage
      };
    });
  }).use(codeBlockComponent);
};

export { defineFeature };
//# sourceMappingURL=index-I5dm1KsK.js.map
