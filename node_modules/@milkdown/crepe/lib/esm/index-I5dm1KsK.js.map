{"version":3,"file":"index-I5dm1KsK.js","sources":["../../src/feature/code-mirror/index.ts"],"sourcesContent":["import { codeBlockComponent, codeBlockConfig } from '@milkdown/kit/component/code-block'\nimport type { LanguageDescription } from '@codemirror/language'\nimport type { Extension } from '@codemirror/state'\nimport { basicSetup } from 'codemirror'\nimport { keymap } from '@codemirror/view'\nimport { defaultKeymap, indentWithTab } from '@codemirror/commands'\nimport type { html } from 'atomico'\nimport type { DefineFeature, Icon } from '../shared'\nimport { chevronDownIcon, clearIcon, searchIcon } from '../../icons'\n\ninterface CodeMirrorConfig {\n  extensions: Extension[]\n  languages: LanguageDescription[]\n  theme: Extension\n\n  expandIcon: Icon\n  searchIcon: Icon\n  clearSearchIcon: Icon\n\n  searchPlaceholder: string\n  noResultText: string\n\n  renderLanguage: (language: string, selected: boolean) => ReturnType<typeof html> | string | HTMLElement\n}\nexport type CodeMirrorFeatureConfig = Partial<CodeMirrorConfig>\n\nexport const defineFeature: DefineFeature<CodeMirrorFeatureConfig> = (editor, config = {}) => {\n  editor\n    .config(async (ctx) => {\n      let {\n        languages,\n        theme,\n      } = config\n      if (!languages) {\n        const { languages: langList } = await import('@codemirror/language-data')\n        languages = langList\n      }\n      if (!theme) {\n        const { oneDark } = await import('@codemirror/theme-one-dark')\n        theme = oneDark\n      }\n      ctx.update(codeBlockConfig.key, defaultConfig => ({\n        extensions: [\n          keymap.of(defaultKeymap.concat(indentWithTab)),\n          basicSetup,\n          theme,\n          ...config?.extensions ?? [],\n        ],\n        languages,\n\n        expandIcon: config.expandIcon || (() => chevronDownIcon),\n        searchIcon: config.searchIcon || (() => searchIcon),\n        clearSearchIcon: config.clearSearchIcon || (() => clearIcon),\n        searchPlaceholder: config.searchPlaceholder || 'Search language',\n        noResultText: config.noResultText || 'No result',\n        renderLanguage: config.renderLanguage || defaultConfig.renderLanguage,\n      }))\n    })\n    .use(codeBlockComponent)\n}\n"],"names":[],"mappings":";;;;;;;AA0BO,MAAM,aAAwD,GAAA,CAAC,MAAQ,EAAA,MAAA,GAAS,EAAO,KAAA;AAC5F,EACG,MAAA,CAAA,MAAA,CAAO,OAAO,GAAQ,KAAA;AACrB,IAAI,IAAA;AAAA,MACF,SAAA;AAAA,MACA,KAAA;AAAA,KACE,GAAA,MAAA,CAAA;AACJ,IAAA,IAAI,CAAC,SAAW,EAAA;AACd,MAAA,MAAM,EAAE,SAAW,EAAA,QAAA,EAAa,GAAA,MAAM,OAAO,2BAA2B,CAAA,CAAA;AACxE,MAAY,SAAA,GAAA,QAAA,CAAA;AAAA,KACd;AACA,IAAA,IAAI,CAAC,KAAO,EAAA;AACV,MAAA,MAAM,EAAE,OAAA,EAAY,GAAA,MAAM,OAAO,4BAA4B,CAAA,CAAA;AAC7D,MAAQ,KAAA,GAAA,OAAA,CAAA;AAAA,KACV;AACA,IAAI,GAAA,CAAA,MAAA,CAAO,eAAgB,CAAA,GAAA,EAAK,CAAc,aAAA,KAAA;AAzCpD,MAAA,IAAA,EAAA,CAAA;AAyCwD,MAAA,OAAA;AAAA,QAChD,UAAY,EAAA;AAAA,UACV,MAAO,CAAA,EAAA,CAAG,aAAc,CAAA,MAAA,CAAO,aAAa,CAAC,CAAA;AAAA,UAC7C,UAAA;AAAA,UACA,KAAA;AAAA,UACA,GAAG,CAAA,EAAA,GAAA,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAQ,UAAR,KAAA,IAAA,GAAA,EAAA,GAAsB,EAAC;AAAA,SAC5B;AAAA,QACA,SAAA;AAAA,QAEA,UAAA,EAAY,MAAO,CAAA,UAAA,KAAe,MAAM,eAAA,CAAA;AAAA,QACxC,UAAA,EAAY,MAAO,CAAA,UAAA,KAAe,MAAM,UAAA,CAAA;AAAA,QACxC,eAAA,EAAiB,MAAO,CAAA,eAAA,KAAoB,MAAM,SAAA,CAAA;AAAA,QAClD,iBAAA,EAAmB,OAAO,iBAAqB,IAAA,iBAAA;AAAA,QAC/C,YAAA,EAAc,OAAO,YAAgB,IAAA,WAAA;AAAA,QACrC,cAAA,EAAgB,MAAO,CAAA,cAAA,IAAkB,aAAc,CAAA,cAAA;AAAA,OACzD,CAAA;AAAA,KAAE,CAAA,CAAA;AAAA,GACH,CACA,CAAA,GAAA,CAAI,kBAAkB,CAAA,CAAA;AAC3B;;;;"}